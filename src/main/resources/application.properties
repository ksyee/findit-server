spring.config.import=optional:file:.env[.properties]
spring.application.name=server

# Security
security.api.enabled=${API_SECURITY_ENABLED:true}
security.api.header-name=${API_SECURITY_HEADER_NAME:X-API-KEY}
security.api.key=${API_SECURITY_KEY}
# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# SQL Initialization
spring.sql.init.mode=never
spring.sql.init.continue-on-error=false
# Flyway Configuration
spring.flyway.locations=classpath:db/migration
spring.flyway.clean-disabled=true
spring.flyway.baseline-on-migrate=true
# Police API Configuration
police.api.base-url=http://apis.data.go.kr/1320000
police.api.lost-items-url=/LostGoodsInfoInqireService/getLostGoodsInfoAccToClAreaPd
police.api.found-items-url=/LosfundInfoInqireService/getLosfundInfoAccToClAreaPd
police.api.enabled=${POLICE_API_ENABLED:false}
police.api.service-key=${POLICE_API_SERVICE_KEY:}
# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when_authorized
management.health.diskspace.enabled=true
management.health.db.enabled=true
# Prometheus Configuration
management.prometheus.metrics.export.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.tags.application=${spring.application.name}
# OpenAPI(Swagger) Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=method
